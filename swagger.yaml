basePath: /v1
definitions:
  model.Account:
    properties:
      created:
        type: string
      fk_status_id:
        type: integer
      id:
        type: integer
      lookup_name:
        type: string
      name:
        type: string
      uid:
        type: string
      updated:
        type: string
    type: object
  model.Dashboard:
    type: object
  model.UpdateUserAccountRoleDTO:
    properties:
      role:
        minimum: 0
        type: integer
      status:
        minimum: 0
        type: integer
    required:
    - role
    - status
    type: object
  model.UserAccount:
    properties:
      created:
        type: string
      email:
        type: string
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      uid:
        type: string
      updated:
        type: string
    type: object
  model.UserAccountAdministration:
    properties:
      email_validated:
        type: boolean
      failed_login_attempts:
        type: integer
      fk_status_id:
        type: integer
      fk_user_account_type_id:
        type: integer
      lookup_name:
        type: string
      status_name:
        type: string
      temp:
        type: boolean
    type: object
  model.UserAccountFull:
    properties:
      ua:
        $ref: '#/definitions/model.UserAccount'
      uaa:
        $ref: '#/definitions/model.UserAccountAdministration'
      uai:
        $ref: '#/definitions/model.UserAccountInformation'
      uam:
        $ref: '#/definitions/model.UserAccountMedia'
    type: object
  model.UserAccountInformation:
    properties:
      address:
        type: string
      country:
        type: string
      id:
        type: integer
      phone:
        type: string
      timezone:
        type: string
      updated:
        type: string
    type: object
  model.UserAccountMedia:
    properties:
      description:
        type: string
      id:
        type: integer
      image:
        type: string
      updated:
        type: string
      website:
        type: string
    type: object
  model.UserAccountRole:
    properties:
      fk_account_id:
        type: integer
      fk_user_account_id:
        type: integer
      id:
        type: integer
      lookup_name:
        type: string
      role:
        type: string
      role_id:
        type: integer
      status:
        type: integer
      updated:
        type: integer
    type: object
  model.UserAccountSigninResponse:
    properties:
      token:
        type: string
    type: object
host: api.engin.app
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: '""'
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /CreateUserAccount:
    post:
      consumes:
      - application/json
      parameters:
      - in: formData
        maxLength: 320
        minLength: 4
        name: email
        required: true
        type: string
      - in: formData
        maxLength: 156
        minLength: 8
        name: password
        required: true
        type: string
      - in: formData
        maxLength: 156
        minLength: 8
        name: passwordconfirm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Creates an account on the service
      tags:
      - account
  /signin:
    post:
      consumes:
      - application/json
      parameters:
      - in: formData
        maxLength: 320
        minLength: 4
        name: email
        required: true
        type: string
      - in: formData
        maxLength: 156
        minLength: 8
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserAccountSigninResponse'
      summary: Sign Into Account
      tags:
      - account
  /v1/account/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: ID for account
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Account'
      summary: Gets the account by ID
      tags:
      - verify
  /v1/admin/accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Account'
            type: array
      summary: Gets all user accounts
      tags:
      - verify
  /v1/admin/user-accounts:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserAccount'
            type: array
      summary: Gets all user accounts
      tags:
      - verify
  /v1/role/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: ID for user account role
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Deletes user by ID
      tags:
      - verify
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: ID for user account
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserAccountRole'
            type: array
      summary: Gets the user account role by ID
      tags:
      - verify
  /v1/signup/{uid}:
    post:
      consumes:
      - application/json
      parameters:
      - description: uid from email
        in: query
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Verifies an email with a UID sent to the account email
      tags:
      - verify
  /v1/user-account:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      - description: ID for user account
        in: query
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Deletes user by ID
      tags:
      - verify
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserAccountFull'
      summary: Gets the user account information
      tags:
      - verify
  /v1/user-account-role/{id}:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for user account
        in: query
        name: id
        required: true
        type: string
      - in: formData
        minimum: 0
        name: role
        required: true
        type: integer
      - in: formData
        minimum: 0
        name: status
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Updates a user account role by ID
      tags:
      - Project
  /v1/user-account-roles/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserAccountRole'
            type: array
      summary: Gets the user account role by account ID
      tags:
      - verify
    post:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UpdateUserAccountRoleDTO'
      summary: Creates a user account role
      tags:
      - verify
  /v1/user-account-roles/{user-id}/{account-id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.UserAccountRole'
            type: array
      summary: Gets the user account role by user ID and account ID
      tags:
      - verify
  /v1/user-account/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserAccountFull'
      summary: Gets the user account information
      tags:
      - verify
  /v1/user-account/{id}/name:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for user account
        in: query
        name: id
        required: true
        type: string
      - in: formData
        maxLength: 320
        minLength: 4
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Updates a user account by ID
      tags:
      - Project
  /v1/user-account/{id}/password:
    put:
      consumes:
      - application/json
      parameters:
      - description: Authentication header as token
        in: header
        name: Authentication
        required: true
        type: string
      - description: ID for user account
        in: query
        name: id
        required: true
        type: string
      - in: formData
        maxLength: 156
        minLength: 8
        name: password
        required: true
        type: string
      - in: formData
        maxLength: 156
        minLength: 8
        name: passwordconfirm
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Updates a user account by ID
      tags:
      - Project
  /v1/user-dashboard:
    get:
      consumes:
      - application/json
      parameters:
      - description: Authentication header
        in: header
        name: Auth
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Dashboard'
      summary: Gets the user dashboard
      tags:
      - verify
swagger: "2.0"
